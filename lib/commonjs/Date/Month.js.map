{"version":3,"names":["Month","props","index","mode","date","dates","startDate","endDate","onPressYear","selectingYear","onPressDate","scrollMode","primaryColor","selectColor","roundness","disableWeekDays","locale","validRange","theme","useTheme","textColorOnPrimary","useTextColorOnPrimary","realIndex","getRealIndex","isHorizontal","isDisabled","isWithinValidRange","useRangeChecker","monthName","month","year","React","useMemo","md","addMonths","Date","y","getFullYear","m","getMonth","formatter","Intl","DateTimeFormat","format","grid","today","daysInMonth","getDaysInMonth","dayOfWeek","getFirstDayOfMonth","emptyDays","monthGrid","map","days","weekGrid","weekIndex","generatedDays","_","dayIndex","isFirstWeek","realDayIndex","beforeWeekDay","dayOfMonth","afterWeekDay","day","isToday","areDatesOnSameDay","inRange","disabled","selected","leftCrop","rightCrop","isFirstDayOfMonth","isLastDayOfMonth","selectedStartDay","selectedEndDay","isDateBetween","safeDates","some","d","yesterday","tomorrow","yesterdaySelected","tomorrowSelected","isWithinOptionalValidRange","styles","height","getMonthHeight","monthHeader","marginTop","monthHeaderSingleMarginTop","marginBottom","monthHeaderSingleMarginBottom","undefined","yearButton","borderRadius","yearButtonInner","monthLabel","fonts","medium","fontFamily","opacity1","opacity0","week","filter","gd","showWeekDay","weekMargin","weekSize","calendarDaySize","montHeaderHeight","monthHeaderSingleHeight","StyleSheet","create","flexDirection","justifyContent","overflow","fontSize","opacity","alignSelf","marginLeft","paddingLeft","alignItems","Array","getGridCount","fill","getIndexCount","startAtIndex","weeksOffset","off","i","cIndex","gridCounts","getIndexFromHorizontalOffset","offset","width","Math","floor","getIndexFromVerticalOffset","estimatedIndex","ceil","estimatedMonthHeight","realOffset","getVerticalMonthsOffset","difference","beginOffset","getHorizontalMonthOffset","count","ob","monthsHeight","c","dayNamesHeight","calendarHeight","getCalendarHeaderHeight","gc","currentMonthHeight","extraHeight","memo"],"sources":["Month.tsx"],"sourcesContent":["import * as React from 'react'\nimport { StyleSheet, View } from 'react-native'\nimport { IconButton, Text, useTheme, TouchableRipple } from 'react-native-paper'\nimport Day, { EmptyDay } from './Day'\n\nimport {\n  addMonths,\n  areDatesOnSameDay,\n  calendarDaySize,\n  DisableWeekDaysType,\n  getDaysInMonth,\n  getFirstDayOfMonth,\n  getRealIndex,\n  getGridCount,\n  isDateBetween,\n  gridCounts,\n  showWeekDay,\n  startAtIndex,\n  beginOffset,\n  estimatedMonthHeight,\n  useRangeChecker,\n} from './dateUtils'\nimport { getCalendarHeaderHeight } from './CalendarHeader'\nimport type {\n  CalendarDate,\n  CalendarDates,\n  ModeType,\n  ValidRangeType,\n} from './Calendar'\nimport { dayNamesHeight } from './DayNames'\nimport { useTextColorOnPrimary } from '../utils'\n\ninterface BaseMonthProps {\n  locale: undefined | string\n  scrollMode: 'horizontal' | 'vertical'\n  disableWeekDays?: DisableWeekDaysType\n  mode: ModeType\n  index: number\n  onPressYear: (year: number) => any\n  selectingYear: boolean\n  onPressDate: (date: Date) => any\n  primaryColor: string\n  selectColor: string\n  roundness: number\n  validRange?: ValidRangeType\n\n  // some of these should be required in final implementation\n  startDate?: CalendarDate\n  endDate?: CalendarDate\n  date?: CalendarDate\n  dates?: CalendarDates\n}\n\ninterface MonthRangeProps extends BaseMonthProps {\n  mode: 'range'\n  startDate: CalendarDate\n  endDate: CalendarDate\n}\n\ninterface MonthSingleProps extends BaseMonthProps {\n  mode: 'single'\n  date: CalendarDate\n}\n\ninterface MonthMultiProps extends BaseMonthProps {\n  mode: 'multiple'\n  dates: CalendarDates\n}\n\nfunction Month(props: MonthSingleProps | MonthRangeProps | MonthMultiProps) {\n  const {\n    index,\n    mode,\n    date,\n    dates,\n    startDate,\n    endDate,\n    onPressYear,\n    selectingYear,\n    onPressDate,\n    scrollMode,\n    primaryColor,\n    selectColor,\n    roundness,\n    disableWeekDays,\n    locale,\n    validRange,\n  } = props\n  const theme = useTheme()\n  const textColorOnPrimary = useTextColorOnPrimary()\n  const realIndex = getRealIndex(index)\n  const isHorizontal = scrollMode === 'horizontal'\n  const { isDisabled, isWithinValidRange } = useRangeChecker(validRange)\n  const { monthName, month, year } = React.useMemo(() => {\n    const md = addMonths(new Date(), realIndex)\n    const y = md.getFullYear()\n    const m = md.getMonth()\n    const formatter = new Intl.DateTimeFormat(locale, {\n      month: 'long',\n    })\n    return { monthName: formatter.format(md), month: m, year: y }\n  }, [realIndex, locale])\n\n  const grid = React.useMemo(() => {\n    const today = new Date()\n\n    const daysInMonth = getDaysInMonth({ year, month })\n    const dayOfWeek = getFirstDayOfMonth({ year, month })\n    const emptyDays = dayOfWeek\n\n    return monthGrid(index).map(({ days, weekGrid }) => {\n      return {\n        weekIndex: weekGrid,\n        generatedDays: days.map((_, dayIndex) => {\n          const isFirstWeek = weekGrid === 0\n          const realDayIndex = emptyDays - dayIndex\n          const beforeWeekDay = isFirstWeek && realDayIndex > 0\n          const dayOfMonth = weekGrid * 7 + dayIndex - emptyDays + 1\n          const afterWeekDay = dayOfMonth > daysInMonth\n\n          const day = new Date(year, month, dayOfMonth)\n          const isToday = areDatesOnSameDay(day, today)\n\n          let inRange = false\n          let disabled = isDisabled(day)\n          let selected = false\n\n          let leftCrop = dayOfMonth === 1\n          let rightCrop = dayOfMonth === daysInMonth\n\n          const isFirstDayOfMonth = dayOfMonth === 1\n          const isLastDayOfMonth = dayOfMonth === daysInMonth\n\n          if (mode === 'range') {\n            const selectedStartDay = areDatesOnSameDay(day, startDate)\n            const selectedEndDay = areDatesOnSameDay(day, endDate)\n            selected = selectedStartDay || selectedEndDay\n            inRange = isDateBetween(day, {\n              startDate,\n              endDate,\n            })\n            if (selectedStartDay) {\n              leftCrop = true\n            }\n            if (selectedEndDay) {\n              rightCrop = true\n            }\n            if (dayIndex === 0 && !selectedStartDay) {\n              leftCrop = false\n            }\n\n            if (dayIndex === 6 && !selectedEndDay) {\n              rightCrop = false\n            }\n\n            if (\n              (isFirstDayOfMonth && selectedEndDay) ||\n              (isLastDayOfMonth && selectedStartDay)\n            ) {\n              inRange = false\n            }\n          } else if (mode === 'multiple') {\n            const safeDates = dates || []\n            selected = safeDates.some((d) => areDatesOnSameDay(day, d))\n\n            const yesterday = new Date(year, month, dayOfMonth - 1)\n            const tomorrow = new Date(year, month, dayOfMonth + 1)\n\n            const yesterdaySelected = safeDates.some((d) =>\n              areDatesOnSameDay(d, yesterday)\n            )\n            const tomorrowSelected = safeDates.some((d) =>\n              areDatesOnSameDay(d, tomorrow)\n            )\n\n            if (selected) {\n              if (tomorrowSelected && yesterdaySelected) {\n                inRange = true\n              }\n              if (tomorrowSelected && !yesterdaySelected) {\n                inRange = true\n                leftCrop = true\n              }\n\n              if (yesterdaySelected && !tomorrowSelected) {\n                inRange = true\n                rightCrop = true\n              }\n\n              if (isFirstDayOfMonth && !tomorrowSelected) {\n                inRange = false\n              }\n\n              if (isLastDayOfMonth && !yesterdaySelected) {\n                inRange = false\n              }\n\n              if (inRange && !leftCrop && !rightCrop) {\n                selected = false\n              }\n            }\n          } else if (mode === 'single') {\n            selected = areDatesOnSameDay(day, date)\n          }\n\n          const isWithinOptionalValidRange = isWithinValidRange(day)\n\n          if (inRange && !disabled) {\n            disabled = false\n          }\n\n          if (!isWithinOptionalValidRange) {\n            disabled = true\n          }\n\n          return {\n            beforeWeekDay,\n            afterWeekDay,\n            year,\n            month,\n            dayOfMonth,\n            dayIndex,\n            mode,\n            selected,\n            inRange,\n            leftCrop,\n            rightCrop,\n            isToday,\n            disabled,\n          }\n        }),\n      }\n    })\n  }, [\n    year,\n    month,\n    index,\n    isDisabled,\n    mode,\n    isWithinValidRange,\n    startDate,\n    endDate,\n    dates,\n    date,\n  ])\n\n  return (\n    <View style={[styles.month, { height: getMonthHeight(scrollMode, index) }]}>\n      <View\n        style={[\n          styles.monthHeader,\n          isHorizontal\n            ? {\n                marginTop: monthHeaderSingleMarginTop,\n                marginBottom: monthHeaderSingleMarginBottom,\n              }\n            : null,\n        ]}\n      >\n        <TouchableRipple\n          disabled={!isHorizontal}\n          onPress={isHorizontal ? () => onPressYear(year) : undefined}\n          accessibilityRole=\"button\"\n          accessibilityLabel={`${monthName} ${year}`}\n          style={[\n            styles.yearButton,\n            {\n              borderRadius: roundness,\n            },\n          ]}\n        >\n          <View\n            style={[\n              styles.yearButtonInner,\n              {\n                borderRadius: roundness,\n              },\n            ]}\n          >\n            <Text\n              style={[\n                styles.monthLabel,\n                theme.fonts.medium,\n                { fontFamily: 'Poppins-SemiBold' },\n              ]}\n              selectable={false}\n            >\n              {monthName} {year}\n            </Text>\n            <View style={isHorizontal ? styles.opacity1 : styles.opacity0}>\n              <IconButton\n                onPress={isHorizontal ? () => onPressYear(year) : undefined}\n                icon={selectingYear ? 'chevron-up' : 'chevron-down'}\n              />\n            </View>\n          </View>\n        </TouchableRipple>\n      </View>\n\n      {grid.map(({ weekIndex, generatedDays }) => (\n        <View style={styles.week} key={weekIndex}>\n          {generatedDays\n            .filter((gd) => showWeekDay(gd.dayIndex, disableWeekDays))\n            .map((gd) =>\n              gd.beforeWeekDay || gd.afterWeekDay ? (\n                <EmptyDay key={gd.dayIndex} />\n              ) : (\n                <Day\n                  key={gd.dayIndex}\n                  theme={theme}\n                  day={gd.dayOfMonth}\n                  month={gd.month}\n                  year={gd.year}\n                  selected={gd.selected}\n                  inRange={gd.inRange}\n                  leftCrop={gd.leftCrop}\n                  rightCrop={gd.rightCrop}\n                  onPressDate={onPressDate}\n                  isToday={gd.isToday}\n                  selectColor={selectColor}\n                  primaryColor={primaryColor}\n                  disabled={gd.disabled}\n                  textColorOnPrimary={textColorOnPrimary}\n                />\n              )\n            )}\n        </View>\n      ))}\n    </View>\n  )\n}\n\nexport const weekMargin = 6\nexport const weekSize = calendarDaySize + weekMargin\nexport const montHeaderHeight = 56\nexport const monthHeaderSingleMarginTop = 4\nexport const monthHeaderSingleMarginBottom = 8 + 44 + 12\nexport const monthHeaderSingleHeight =\n  monthHeaderSingleMarginTop + monthHeaderSingleMarginBottom\n\nconst styles = StyleSheet.create({\n  week: {\n    flexDirection: 'row',\n    marginBottom: weekMargin,\n    height: calendarDaySize,\n  },\n\n  month: {},\n\n  monthHeader: {\n    height: montHeaderHeight,\n    justifyContent: 'center',\n    overflow: 'hidden',\n  },\n  monthLabel: { fontSize: 14, opacity: 0.7 },\n  yearButton: { alignSelf: 'flex-start', marginLeft: 6 },\n  yearButtonInner: {\n    paddingLeft: 16,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  opacity0: { opacity: 0 },\n  opacity1: { opacity: 1 },\n})\n\nconst monthGrid = (index: number) => {\n  return Array(getGridCount(index))\n    .fill(null)\n    .map((_, weekGrid) => {\n      const days = Array(7).fill(null)\n      return { weekGrid, days }\n    })\n}\n\nfunction getIndexCount(index: number): number {\n  if (index > startAtIndex) {\n    return index - startAtIndex\n  }\n\n  return -(startAtIndex - index)\n}\n\nfunction weeksOffset(index: number): number {\n  if (index === startAtIndex) {\n    return 0\n  }\n  let off = 0\n  if (index > startAtIndex) {\n    for (let i = 0; i < index - startAtIndex; i++) {\n      const cIndex = startAtIndex + i\n      off += gridCounts[cIndex] || getGridCount(cIndex)\n    }\n  } else {\n    for (let i = 0; i < startAtIndex - index; i++) {\n      const cIndex = startAtIndex - i - 1\n      off -= gridCounts[cIndex] || getGridCount(cIndex)\n    }\n  }\n  return off\n}\n\nexport function getIndexFromHorizontalOffset(\n  offset: number,\n  width: number\n): number {\n  return startAtIndex + Math.floor(offset / width)\n}\n\nexport function getIndexFromVerticalOffset(offset: number): number {\n  let estimatedIndex = startAtIndex + Math.ceil(offset / estimatedMonthHeight)\n\n  const realOffset = getVerticalMonthsOffset(estimatedIndex)\n  const difference = (realOffset - beginOffset - offset) / estimatedMonthHeight\n  if (difference >= 1 || difference <= -1) {\n    estimatedIndex -= Math.floor(difference)\n  }\n  return estimatedIndex\n}\n\nexport function getHorizontalMonthOffset(index: number, width: number) {\n  if (index < 0) {\n    return 0\n  }\n  return width * index\n}\n\nexport function getVerticalMonthsOffset(index: number) {\n  const count = getIndexCount(index)\n  const ob = weeksOffset(index)\n  const monthsHeight = weekSize * ob\n  const c = monthsHeight + count * (dayNamesHeight + montHeaderHeight)\n\n  return (c || 0) + beginOffset\n}\n\nexport function getMonthHeight(\n  scrollMode: 'horizontal' | 'vertical',\n  index: number\n): number {\n  const calendarHeight = getCalendarHeaderHeight(scrollMode)\n  const gc = getGridCount(index)\n\n  const currentMonthHeight = weekSize * gc\n  const extraHeight =\n    scrollMode === 'horizontal' ? monthHeaderSingleHeight : montHeaderHeight\n  const c = calendarHeight + currentMonthHeight + extraHeight\n  return c || 0\n}\n\nexport default React.memo(Month)\n"],"mappings":"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"}